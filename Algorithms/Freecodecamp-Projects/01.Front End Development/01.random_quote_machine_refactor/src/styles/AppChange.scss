/*
FIXED:

BUG_01: It has problems with the bottons right/left because his position was on 
relative.
Solution: I removed the property of display: inline-block; in the botton and I used
the propertyi instead grid-template-columns: .40fr .50fr .50fr;

*/

// variables
$svg-bg-color: rgba(255, 255, 255, 0.178);
$body-bg-color: rebeccapurple;
$l1: "100% 0%,0% 0%,0% 50%,0% 100%,100% 100%"; $l2: "100% 0%, 0% 0%, 0% 50%, 0% 100%, 100% 100%";
$l3: "100% 0%,25% 0%,0% 50%,25% 100%,100% 100%"; $l4: "100% 0%, 25% 0%, 0% 50%, 25% 100%, 100% 100%";
$r1: "0% 0%,100% 0%,100% 50%,100% 100%,0% 100%"; $r2: "0% 0%, 100% 0, 100% 50%, 100% 100%, 0% 100%";
$r3: "0% 0%,75% 0%,100% 50%,75% 100%,0% 100%"; $r4: "0% 0%, 75% 0%, 100% 50%, 75% 100%, 0% 100%";
// lists
$houses: ("Tully": 2.2,"Tyrell": 1.6, "Martell": 1.2,"Stark": 1.8,"Lannister": 1.3,"Greyjoy": 1.7,"Baratheon": 1.3,"Arryn": 1.6,"Targaryen": 1);
$bottons: ("left" ".40fr" ".50fr" $l1 $l2 $l3 $l4 10px, "right" ".50fr" ".40fr" $r1 $r2 $r3 $r4 -10px);

@mixin Container-features {
  display: grid;
  grid-template-columns: 0.25fr auto 0.25fr;
  grid-template-areas:
    "column1 topmiddle column3"
    "Middle Middle Middle"
    "column7 bottonsmiddle column9";
  grid-gap: 10px;
  &--Top {
        @include Topmiddle-features;  
      }

  &--Middle {
    @include Middle-features;
  }

  &--Bottom {
        @include Bottommiddle-features;
      } 
}

@mixin Topmiddle-features {
  display: grid;
  grid-template-columns: 0.25fr 0.25fr 0.25fr 0.25fr 0.25fr;
  grid-template-rows: auto;
  grid-template-areas:
    "message message message message message"
    "main main main main author"
    "bshare bshare bshare bshare bshare";
  grid-gap: 10px;
  gap: 20px;
  color: black;
  border-radius: 5px;
  margin-top: 10px;
  padding: 20px;
  font-size: 160%;
  background-color: rgba(255, 255, 255, 0.178);

  &--message {
    grid-area: message;
    color: black;
    border-radius: 5px;
    font-size: 180%;
    line-height: 120%;
    word-wrap: break-word;

    i {
      margin: 20px;
    }
  }

  &--author {
    grid-area: author;
    color: black;
    border-radius: 5px;
    padding: 20px;
    font-size: 150%;
    word-wrap: break-word;
  }

  
  //@debug calc(.Container);
  // @if {

  // }
  &--bshare {
    display: flex;
    grid-area: bshare;
    gap: 20px;
    justify-content: center;
    align-items: center;
    column-gap: 20px;

    &--bEffect {
      pointer-events: auto;
      cursor: pointer;
      background: #e7e7e7;
      border: none;
      margin: 0;
      font-family: inherit;
      font-size: 150%;
      position: relative;
      color: #fff;
      width: 100%;

      .bDivision {
        display: grid;
        grid-template-columns: 0.25fr 0.25fr 0.25fr 0.25fr;
        grid-template-rows: auto;
        grid-template-areas: "bc3 bmessage bmessage bc4";
        pointer-events: auto;
        cursor: pointer;
        font-size: 12px;

        .bmessage {
          display: grid;
          grid-template-columns: auto;
          grid-template-rows: auto;
          grid-template-areas: "b-icon b-name";

          .b-icon {
            grid-area: b-icon;
            margin-top: -5px;

            i {
              width: auto;
              height: 0;
              margin: 0;
              margin-right: 10px;
              font-size: 22px;
            }

            #copy-logo {
              margin: 0;
              margin-bottom: -13px;
              margin-top: -20px;
              margin-right: -10px;
              transform: scale(.8);
            }
          }

          .b-name {
            grid-area: b-name;
            margin-top: -8px;
            font-size: 160%;
          }
        }
      }

      &::before,
      &::after {
        position: absolute;
        top: 0;
        left: 0;
        width: 100% !important;
        height: 100% !important;
      }

      &--share {
        background: none;
        font-family: "Cinzel";
        padding: 0.7em 2.5em;
      }
      
      &--share div {
        display: inline-block;
        position: relative;
        color: #fff;
      }

      &--share::before {
        content: "";
        background: #000;
        transition: transform 0.3s cubic-bezier(0.2, 1, 0.7, 1);
      }
      
      &--share:hover::before {
        transform: scale3d(0.9, 0.8, 1);
      }

      &--share::after {
        content: "";
        border: 1px solid #fff;
        transition: transform 0.3s cubic-bezier(0.2, 1, 0.7, 1);
        border-radius: 0px;
        transform: scale3d(0.85, 0.65, 1);
        z-index: -1;
      }
      
      &--share:hover::after {
        transform: scale3d(1, 1, 1);
      }
    }  
  }
}

@mixin Middle-features {
  grid-area: Middle;
  display: grid;
  grid-template-columns: 0.25fr auto 0.25fr;
  grid-template-rows: 100px;
  grid-template-areas:
    "bottonleft SB bottonright";
  grid-gap: 10px;

  @each $name, $pl1, $pl2, $p1, $p2, $p3, $p4, $tran in $bottons {
    &--#{$name} {
      display: grid;
      grid-template-columns: #{$pl1} .50fr #{$pl2};
      grid-template-rows: auto;
      grid-template-areas: "bot#{$name} b#{$name}1 b#{$name}2";

      &--inside {
        grid-area: bot#{$name};

        &--bot {
          pointer-events: auto;
          cursor: pointer;
          background: #e7e7e7;
          border: none;
          padding: 1.5rem 3rem;
          margin: 0;
          font-family: inherit;
          font-size: inherit;
          position: relative;
          color: #fff;

          &::before,
          &::after {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
          }

          &--effect {
            font-family: bely-display, sans-serif;
            color: #fff;
            background: none;

            &::before {
              content: "";
              background: #000;
              -webkit-clip-path: polygon(#{$p1});
              clip-path: polygon(#{$p2});
              transition: clip-path 0.4s cubic-bezier(0.2, 1, 0.8, 1),
                -webkit-clip-path 0.4s cubic-bezier(0.2, 1, 0.8, 1);
            }

            &:hover::before {
              background: #fff;
              -webkit-clip-path: polygon(#{$p3});
              clip-path: polygon(#{$p4});
            }

            & span {
              display: block;
              mix-blend-mode: difference;
              transition: transform 0.4s cubic-bezier(0.2, 1, 0.8, 1);
            }

            &:hover span {
              transform: translate3d(#{$tran}, 0, 0);
            }
          }
        }
      }
    }
  }
}

@mixin Bottommiddle-features {
  display: grid;
  grid-template-columns: 0.25fr auto 0.25fr;
  grid-template-areas:
    "column1 imagesvg column3"
    "column4 imagesvg column6"
    "column7 logo column9";
  grid-gap: 10px;

  &--imagesvg{
    grid-area: imagesvg;
    display: grid;
    grid-template-columns: auto;
    grid-template-rows: auto;
    grid-template-areas: "svgLeft svgside svgRight";
    grid-gap: 10px;
    gap: 10px;
    height: auto;
      @each $house, $scale in $houses {
        .#{$house} {
          transform: scale($scale);
          display: block;
          margin: auto;
          background-color: $svg-bg-color;
        }
      }
  }

  &--logo {
    transform: scale(.2);
    h1 {
      text-align: center;
    }

  &--react {
    width: 30%;
    height: 30%;
    display: block;
    margin: auto;
  }
  }
}

html {
  margin: 0;
  padding: 0;
  height: auto;

  body {
    background-color: $body-bg-color;

    .Container {
      @include Container-features;
    }
  }
}